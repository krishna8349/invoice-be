# Generated by Django 4.2.1 on 2024-05-29 10:05

import app.customerbillapp.constants
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppliedCustomerBillingRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('is_billed', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppliedCustomerBillingRateCharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('value_type', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('appliedCustomerBillingRate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_customer_billing_rate_characteristic', to='customerbillapp.appliedcustomerbillingrate')),
            ],
        ),
        migrations.CreateModel(
            name='BillCycleRef',
            fields=[
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('id', models.CharField(blank=True, max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Bill Cycle Ref',
                'db_table': 'bill_cycle_ref',
            },
        ),
        migrations.CreateModel(
            name='BillingAccountRef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'billing_account_ref',
                'db_table': 'billing_account_ref',
            },
        ),
        migrations.CreateModel(
            name='BillRef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Bill Ref',
                'db_table': 'customer_bill_ref',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_type', models.CharField(blank=True, max_length=100, null=True)),
                ('party_role_type', models.CharField(blank=True, max_length=100, null=True)),
                ('valid_for', models.DateTimeField(blank=True, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('href', models.CharField(max_length=100, unique=True)),
                ('bill_date', models.DateTimeField(blank=True, max_length=100, null=True)),
                ('bill_no', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('next_bill_date', models.DateTimeField(blank=True, null=True)),
                ('payment_due_date', models.DateTimeField(blank=True, null=True)),
                ('run_type', models.CharField(blank=True, choices=[(app.customerbillapp.constants.CustomerBillRunType['ON_CYCLE'], 'On Cycle'), (app.customerbillapp.constants.CustomerBillRunType['OFF_CYCLE'], 'Off Cycle')], default=app.customerbillapp.constants.CustomerBillRunType, max_length=100, null=True)),
                ('state', models.CharField(blank=True, choices=[(app.customerbillapp.constants.BillState['NEW'], 'new'), (app.customerbillapp.constants.BillState['ONHOLD'], 'on_Hold'), (app.customerbillapp.constants.BillState['VALIDATED'], 'validated'), (app.customerbillapp.constants.BillState['SENT'], 'sent'), (app.customerbillapp.constants.BillState['PARTIALLYPAID'], 'partially_paid'), (app.customerbillapp.constants.BillState['SETTLED'], 'settled')], default=app.customerbillapp.constants.BillState['NEW'], max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'customer_bill',
                'db_table': 'customer_bill',
            },
        ),
        migrations.CreateModel(
            name='FinancialAccountRef',
            fields=[
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'financial_account_ref',
                'db_table': 'financial_account_ref',
            },
        ),
        migrations.CreateModel(
            name='GeographicAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('locality', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('post_code', models.CharField(blank=True, max_length=100, null=True)),
                ('state_on_province', models.CharField(blank=True, max_length=100, null=True)),
                ('street_name', models.CharField(blank=True, max_length=100, null=True)),
                ('street_nr', models.CharField(blank=True, max_length=100, null=True)),
                ('street_nr_last', models.CharField(blank=True, max_length=100, null=True)),
                ('street_nr_last_suffix', models.CharField(blank=True, max_length=100, null=True)),
                ('Street_type', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MediumCharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('email_address', models.CharField(blank=True, max_length=100, null=True)),
                ('fax_number', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('post_code', models.CharField(blank=True, max_length=100, null=True)),
                ('social_network_id', models.CharField(blank=True, max_length=100, null=True)),
                ('state_or_province', models.CharField(blank=True, max_length=100, null=True)),
                ('street1', models.CharField(blank=True, max_length=100, null=True)),
                ('street2', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Money',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=50)),
            ],
            options={
                'verbose_name_plural': 'Money',
                'db_table': 'money',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethodRef',
            fields=[
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('id', models.CharField(blank=True, max_length=100, primary_key=True, serialize=False)),
                ('href', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'payment_method_ref',
                'db_table': 'payment_method_ref',
            },
        ),
        migrations.CreateModel(
            name='PaymentRef',
            fields=[
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('id', models.CharField(blank=True, max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'payment_ref',
                'db_table': 'payment_ref',
            },
        ),
        migrations.CreateModel(
            name='ProductOfferingPrice',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('href', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bundle', models.BooleanField(blank=True, null=True)),
                ('last_update', models.DateTimeField(auto_now_add=True)),
                ('life_cycle_status', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('percentage', models.FloatField()),
                ('price_type', models.CharField(blank=True, max_length=255, null=True)),
                ('recurring_charge_period_length', models.CharField(blank=True, max_length=255, null=True)),
                ('recurring_charge_period_type', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('bundle_pop_relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('constraint', models.CharField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('pop_relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.CharField(blank=True, max_length=255, null=True)),
                ('pricing_logic_algorithm', models.CharField(blank=True, max_length=255, null=True)),
                ('prod_specchar_value_use', models.CharField(blank=True, max_length=255, null=True)),
                ('product_offering_term', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_of_measure', models.CharField(blank=True, max_length=255, null=True)),
                ('valid_for', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Product Offering Price',
                'db_table': 'product_offering_pice',
            },
        ),
        migrations.CreateModel(
            name='ProductOfferingPriceTax',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('href', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_category', models.CharField(max_length=255)),
                ('tax_rate', models.FloatField()),
                ('tax_amount', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Product Offering Price Tax',
                'db_table': 'product_offering_pice_tax',
            },
        ),
        migrations.CreateModel(
            name='ProductRef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, default=1, max_digits=50)),
                ('units', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'quantity',
                'db_table': 'quantity',
            },
        ),
        migrations.CreateModel(
            name='RelatedGeographicLocationRefOrValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaxMaster',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('tax_category', models.CharField(max_length=255)),
                ('tax_rate', models.FloatField()),
                ('tax_description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Tax Master',
                'db_table': 'tax_master',
            },
        ),
        migrations.CreateModel(
            name='TimePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('start_date_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'time_period',
                'db_table': 'time_period',
            },
        ),
        migrations.CreateModel(
            name='TaxItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('tax_category', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, max_digits=50)),
                ('customer_bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_items', to='customerbillapp.customerbill')),
                ('tax_amount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.money')),
            ],
            options={
                'verbose_name_plural': 'Tax Item',
                'db_table': 'tax_item',
            },
        ),
        migrations.CreateModel(
            name='RelatedPartyRef',
            fields=[
                ('id', models.CharField(blank=True, max_length=100, primary_key=True, serialize=False)),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_parties', to='customerbillapp.customerbill')),
            ],
            options={
                'verbose_name_plural': 'related_party_ref',
                'db_table': 'related_party_ref',
            },
        ),
        migrations.CreateModel(
            name='ProductOffering',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('href', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_bundle', models.BooleanField(blank=True, null=True)),
                ('is_sellable', models.BooleanField(blank=True, null=True)),
                ('last_update', models.DateTimeField(auto_now_add=True)),
                ('life_cycle_status', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('status_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('agreement', models.CharField(blank=True, max_length=255, null=True)),
                ('attachment', models.CharField(blank=True, max_length=255, null=True)),
                ('bundled_product_offering', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('channel', models.CharField(blank=True, max_length=255, null=True)),
                ('market_segment', models.CharField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('prod_specchar_value_use', models.CharField(blank=True, max_length=255, null=True)),
                ('product_offering_relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('product_specification', models.CharField(blank=True, max_length=255, null=True)),
                ('resource_candidate', models.CharField(blank=True, max_length=255, null=True)),
                ('service_candidate', models.CharField(blank=True, max_length=255, null=True)),
                ('service_level_agreement', models.CharField(blank=True, max_length=255, null=True)),
                ('valid_for', models.CharField(blank=True, max_length=255, null=True)),
                ('product_offering_price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customerbillapp.productofferingprice')),
                ('product_offering_price_tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customerbillapp.productofferingpricetax')),
                ('tax_master', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customerbillapp.taxmaster')),
            ],
            options={
                'verbose_name_plural': 'Product Offering',
                'db_table': 'product_offering',
            },
        ),
        migrations.CreateModel(
            name='GeographicSubAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('building_name', models.CharField(blank=True, max_length=100, null=True)),
                ('level_number', models.CharField(blank=True, max_length=100, null=True)),
                ('level_type', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('private_street_name', models.CharField(blank=True, max_length=100, null=True)),
                ('private_street_number', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_address_type', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_unit_number', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_unit_type', models.CharField(blank=True, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('geographic_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='geo_address', to='customerbillapp.geographicaddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='geographicaddress',
            name='geographic_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.relatedgeographiclocationreforvalue'),
        ),
        migrations.CreateModel(
            name='CustomerBillOnDemand',
            fields=[
                ('id', models.CharField(blank=True, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('lastUpdate', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, choices=[(app.customerbillapp.constants.ProductStatus['INPROGRESS'], 'in_progress'), (app.customerbillapp.constants.ProductStatus['REJECTED'], 'rejected'), (app.customerbillapp.constants.ProductStatus['DONE'], 'done'), (app.customerbillapp.constants.ProductStatus['TERMINATEDWITHERROR'], 'terminated_with_error')], default=app.customerbillapp.constants.ProductStatus, max_length=100, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
                ('billingAccount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='billing_account', to='customerbillapp.billingaccountref')),
                ('customerBill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='customer_Ref', to='customerbillapp.billref')),
                ('relatedParty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_party_ref', to='customerbillapp.relatedpartyref')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customerbill',
            name='amount_due',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customerbill_amountdue', to='customerbillapp.money'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='billing_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.billingaccountref'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='billing_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.timeperiod'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='contacts',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.contact'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='financial_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.financialaccountref'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='geographic_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.geographicaddress'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.paymentmethodref'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='remaining_amount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customerbill_remaining_amount', to='customerbillapp.money'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='tax_excluded_amount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customerbill_tax_excluded', to='customerbillapp.money'),
        ),
        migrations.AddField(
            model_name='customerbill',
            name='tax_included_amount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customerbill_tax_included', to='customerbillapp.money'),
        ),
        migrations.CreateModel(
            name='ContactMedium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium_type', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred', models.BooleanField(default=False)),
                ('valid_for', models.DateTimeField(blank=True, null=True)),
                ('base_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schema_location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_mediums', to='customerbillapp.contact')),
                ('medium_characteristics', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medium_characteristics', to='customerbillapp.mediumcharacteristic')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='customer_bill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_bill_contact', to='customerbillapp.customerbill'),
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(blank=True, max_length=100, null=True)),
                ('characteristicRelationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='character', to='customerbillapp.appliedcustomerbillingratecharacteristic')),
            ],
            options={
                'verbose_name_plural': 'Characteristics',
                'db_table': 'characteristics',
            },
        ),
        migrations.CreateModel(
            name='AttachmentRefOrValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('href', models.CharField(blank=True, max_length=100, null=True)),
                ('attachment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_type', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bill_documents', to='customerbillapp.customerbill')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.quantity')),
                ('valid_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.timeperiod')),
            ],
            options={
                'verbose_name_plural': 'attachment_ref_or_value',
                'db_table': 'attachment_ref_or_value',
            },
        ),
        migrations.CreateModel(
            name='AppliedPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('applied_amount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.money')),
                ('customer_bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_payments', to='customerbillapp.customerbill')),
                ('payment_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.paymentref')),
            ],
            options={
                'verbose_name_plural': 'applied_payment',
                'db_table': 'applied_payment',
            },
        ),
        migrations.AddField(
            model_name='appliedcustomerbillingrate',
            name='bill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.billref'),
        ),
        migrations.AddField(
            model_name='appliedcustomerbillingrate',
            name='billing_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.billingaccountref'),
        ),
        migrations.AddField(
            model_name='appliedcustomerbillingrate',
            name='characteristic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.appliedcustomerbillingratecharacteristic'),
        ),
        migrations.AddField(
            model_name='appliedcustomerbillingrate',
            name='period_coverage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.timeperiod'),
        ),
        migrations.AddField(
            model_name='appliedcustomerbillingrate',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.productref'),
        ),
        migrations.AddField(
            model_name='appliedcustomerbillingrate',
            name='tax_excluded_amount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_bill_rate_tax_money', to='customerbillapp.money'),
        ),
        migrations.AddField(
            model_name='appliedcustomerbillingrate',
            name='tax_included_amount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_bill_rate_tax_included_amount_money', to='customerbillapp.money'),
        ),
        migrations.CreateModel(
            name='AppliedBillingTaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_category', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_rate', models.IntegerField()),
                ('appliedCustomerBillingRate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_customer_billing_tax_rate', to='customerbillapp.appliedcustomerbillingrate')),
                ('tax_amount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.money')),
            ],
        ),
        migrations.CreateModel(
            name='AccountBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_type', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('schema_location', models.CharField(max_length=100)),
                ('balance_type', models.CharField(max_length=50)),
                ('account_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_balances', to='customerbillapp.financialaccountref')),
                ('amount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.money')),
                ('valid_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerbillapp.timeperiod')),
            ],
            options={
                'verbose_name_plural': 'account_balance',
                'db_table': 'account_balance',
            },
        ),
    ]
